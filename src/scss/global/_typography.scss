/* Type Selection
 * ----------------------------------------------- */
// To save on data, we're only including files that we're using.
// Currently this is 400, 500, 600, 700, 800

// Font Face Example
// @font-face {
//   font-family: 'Noto Sans';
//   src: url('../fonts/noto-sans/static/noto-sans-400.woff2') format('woff2'),
//       url('../fonts/noto-sans/static/noto-sans-400.ttf') format('ttf');
//   font-weight: 400;
//   font-style: normal;
//   font-display: swap;
// }


/* Headings
 * ----------------------------------------------- */
h1,
h2,
h3,
h4,
h5,
h6,
.h1,
.h2,
.h3,
.h4,
.h5,
.h6 {
  margin: 0;
  line-height: 1.2;
  font-family: 'Bitter', Arial, Helvetica, sans-serif;

  svg,
  path {
    fill: currentColor;
  }
}

h1,
.h1 {
  font-size: var(--heading-1);
  font-weight: 700;
  line-height: 1.2;
}

h2,
.h2 {
  font-size: var(--heading-2);
  line-height: 1.25;
  font-weight: 600;
}

h3,
.h3 {
  font-family: 'Funnel Sans', Arial, Helvetica, sans-serif;
  font-size: var(--heading-3);
  font-weight: 700;
  line-height: 1.14;
}

h4,
.h4 {
  font-size: var(--heading-4);
  font-weight: 700;
  line-height: 1.33;
}

h5,
.h5 {
  font-family: 'Funnel Sans', Arial, Helvetica, sans-serif;
  font-size: var(--heading-5);
  font-weight: 700;
  line-height: 1.2;
}

h6,
.h6 {
  font-size: var(--heading-6);
  line-height: 1.2;
  font-weight: 500;
}

.display-large {
  font-size: var(--display-large);
  font-family: 'Bitter', Arial, Helvetica, sans-serif;
  font-weight: 700;
}

.display-small {
  font-size: var(--display-small);
  font-family: 'Bitter', Arial, Helvetica, sans-serif;
  font-weight: 700;
}

.font-large {
  font-size: var(--font-large);
}

.font-small {
  font-size: var(--font-small);
}

/* Basic Text Styles
 * ----------------------------------------------- */
body {
  color: var(--text-primary);
  font-size: var(--font-size);
  font-weight: 400; // 'Funnel Sans' has a variable font weight
  font-family: 'Funnel Sans', Arial, Helvetica, sans-serif;
  line-height: 1.5;
}

p,
li {
  max-width: 90rem;
}

ol {
  >li>ol {
    list-style: lower-latin;

    >li>ol {
      list-style: lower-roman;
    }
  }
}

ul, ol {
  ul, ol {
    margin-top: var(--padding-200);
  }
}

// external link icon
.external_icon {
  display: inline-block;
  width: 1em;
  height: 1em;
  fill: currentColor;
}

small {
  display: block;
  margin: 0;
  font-size: var(--font-small);
}

cite {
  display: inline-block;
  font-style: normal;
  font-size: var(--font-size);
}

b,
strong {
  font-weight: 700;
}

em {
  font-style: italic;
}

u {
  text-decoration: underline;
}

s {
  text-decoration: line-through;
}

hr {
  margin: calc(var(--component-margin-top-default) + 10rem) auto;
  border: none;
  width: 100%;
  height: 0.1rem;
  background-color: #000;
  position: relative;
  overflow: visible;
  
  &::before {
    content: '';
    display: block;
    width: 20rem;
    height: 20rem;
    background-color: #FFF;
    position: absolute;
    top: 50%;
    left: 0;
    transform: translate(0, -50%);
    z-index: 2;
    background-position: center center;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0.1rem solid #000;
  }

  &.type--hiding::before {
    background-image: url('../img/sketches/hiding.png');
  }
  
  &.type--phone::before {
    background-image: url('../img/sketches/telephone-poles.png');
  }
  
  &.type--baba::before {
    background-image: url('../img/sketches/baba.png');
  }
  
  &.type--trap::before {
    background-image: url('../img/sketches/trap.png');
  }

  + [class*=component],
  + * {
    margin-top: var(--component-margin-top-default);
  }
}

pre {
  background-color: var(--olive-800);
  padding: var(--padding-200);
  overflow: auto;
  border-radius: 1rem;
  max-height: 50rem;

  code {
    text-wrap: wrap;
    max-width: 100%;
    display: block;
    word-break: break-word;
  }
}

code:not([class]) {
  background-color: var(--olive-800);
  padding: 0.2rem var(--padding-100);
  border-radius: 0.4rem;
}

/* Typography Spacing
 * ----------------------------------------------- */
main {

  *+p,
  *+ul,
  *+ol,
  *+a,
  *+address,
  *+iframe {
    margin-top: var(--vertical-type-spacing-sm);
  }

  *+blockquote {
    margin-top: var(--vertical-type-spacing-sm);
  }

  h1+* {
    margin-top: var(--vertical-type-spacing-xs);
  }

  h2+* {
    margin-top: var(--vertical-type-spacing-med);
  }

  h2 + div {
    // usually inside a component with a content wrapper
    margin-top: var(--vertical-type-spacing-lrg);
  }

  h3+*,
  h4+*,
  .h3+*,
  .h4+* {
    margin-top: var(--vertical-type-spacing-xs);
  }

  h5+*,
  h6+*,
  .h5+*,
  .h6+* {
    margin-top: var(--vertical-type-spacing-xs);
  }

  *+h2 {
    margin-top: var(--vertical-type-spacing-lrg);
  }

  *+h3,
  *+h4,
  *+h5 {
    margin-top: var(--padding-500);
  }

  *+h6,
  *+.table-wrapper,
  *+table {
    margin-top: var(--vertical-type-spacing-med);
  }

  *+small,
  *+figcaption {
    margin-top: var(--vertical-type-spacing-xs);
  }

  *+p:has([class*="btn"]) {
    margin-top: var(--vertical-type-spacing-med);
  }

  ul,
  ol {
    padding-left: var(--padding-400);

    ul,
    ol {
      padding-left: var(--padding-200);
    }
  }

  li+li {
    margin-top: var(--padding-200);
  }

  [class*=wrapper] + h2 {
    margin-top: var(--component-margin-top-default);
  }

  @media screen and (min-width: 768px) {

    *+h3,
    *+h4,
    *+h5 {
      margin-top: var(--padding-400);
    }
  }
}


/* Anchors
 * ----------------------------------------------- */
a {
  color: var(--text-link-primary);
  text-decoration: underline;
  cursor: pointer;

  &:hover,
  &:focus {
    color: var(--text-link-hover);
    text-decoration: none;
  }

  // we have lots of node and paragraph card links with their own focus states. Ignore them.
  &:not(.node):not([class*='paragraph']):focus-visible {
    outline: var(--border-thickness-200) solid var(--focus-state-border);
    outline-offset: 0.2rem;
    border-radius: var(--radius-button-300);
  }

  &:visited {
    color: var(--text-link-visited);
  }

  &.has-external-icon {
    svg {
      vertical-align: baseline;
      margin-left: 0.3em;
      width: 1.6rem;
      height: 1.6rem;
      stroke: currentColor;
      flex-shrink: 0;

      path {
        fill: currentColor;
      }
    }
  }
}